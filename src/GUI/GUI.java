/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Constants.SimulationConstants;
import java.awt.BorderLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author korenciak.marek
 */
public class GUI extends javax.swing.JFrame implements GUI_Interface {

    private GUI_Bridge simulation = new GUI_Bridge();
    private ArrayList<JTextField> textFields = new ArrayList<>();
    private int replications = 0;

    private ArrayList<Double> storageAAvgContainer;
    private ArrayList<Double> storageBAvgContainer;
    private ArrayList<Double> timeContainer;

    private Random rand = new Random();

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();

        textFields.add(type1NumberTextField);
        textFields.add(type2NumberTextField);
        textFields.add(type3NumberTextField);
        textFields.add(type4NumberTextField);
        textFields.add(type5NumberTextField);

        setLocationRelativeTo(null);

        intervalSetted.setText(intervalSlider.getValue() + "");
        durationSetted.setText(durationSlider.getValue() + "");

        simulation.setSpeed(intervalSlider.getValue(), durationSlider.getValue());

        resetLabels();

        maxSpeedCheckBox.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent e) {
                if (maxSpeedCheckBox.isSelected()) {
                    intervalSlider.setEnabled(false);
                    durationSlider.setEnabled(false);
                    simulation.setMaxSpeed();
                } else {
                    intervalSlider.setEnabled(true);
                    durationSlider.setEnabled(true);
                    simulation.setSpeed(intervalSlider.getValue(), durationSlider.getValue());
                }
            }
        });

        intervalSlider.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                simulation.setSpeed(intervalSlider.getValue(), durationSlider.getValue());
                intervalSetted.setText(intervalSlider.getValue() + "");
            }
        });

        durationSlider.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                simulation.setSpeed(intervalSlider.getValue(), durationSlider.getValue());
                durationSetted.setText(durationSlider.getValue() + "");
            }
        });

        for (int i = 0; i < textFields.size(); i++) {
            textFields.get(i).getDocument().addDocumentListener(new DocumentListener() {

                @Override
                public void insertUpdate(DocumentEvent e) {
                    getTotalPrice();
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    getTotalPrice();
                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    getTotalPrice();
                }
            });
        }

        buyUnloaderCheckBox.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                getTotalPrice();
            }
        });

        simulationNoStarted();
        priceLabel.setText("0 â‚¬");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buyUnloaderCheckBox = new javax.swing.JCheckBox();
        replicationNumberTextField = new javax.swing.JTextField();
        seedTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        type1NumberTextField = new javax.swing.JTextField();
        type2NumberTextField = new javax.swing.JTextField();
        type3NumberTextField = new javax.swing.JTextField();
        type4NumberTextField = new javax.swing.JTextField();
        type5NumberTextField = new javax.swing.JTextField();
        simulateButton = new javax.swing.JButton();
        turnOffACompany = new javax.swing.JCheckBox();
        jLabel33 = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        fullVehicles = new javax.swing.JCheckBox();
        turnOffDays = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        simulationTimeLabel = new javax.swing.JLabel();
        intervalSlider = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        durationSlider = new javax.swing.JSlider();
        intervalSetted = new javax.swing.JLabel();
        durationSetted = new javax.swing.JLabel();
        pauseSimulationButton = new javax.swing.JButton();
        stopSimulationButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        simulationEnviromentTIme = new javax.swing.JLabel();
        maxSpeedCheckBox = new javax.swing.JCheckBox();
        jLabel34 = new javax.swing.JLabel();
        replicationNumberLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        unloaderBUsageLabel = new javax.swing.JLabel();
        unloaderAUsageLabel = new javax.swing.JLabel();
        loaderBUsageLabel = new javax.swing.JLabel();
        loaderAUsageLabel = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        resorcesOutcome = new javax.swing.JLabel();
        resorcesBComeLabel = new javax.swing.JLabel();
        resorcesAComeLabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        takeOutSuccessLabel = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        carFailureTime = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        avgLoadPerCycleLabel = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        avgDurationOfCycleLabel = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        rowAAvgTime = new javax.swing.JLabel();
        rowBAvgTime = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        rowAAvgLengthLabel = new javax.swing.JLabel();
        rowBAvgLengthLabel = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        avgABStorageLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        resourceOutcomeGlobalLabel = new javax.swing.JLabel();
        successGlobalLabel = new javax.swing.JLabel();
        resourceBComeGlobalLabel = new javax.swing.JLabel();
        resourceAComeGlobalLabel = new javax.swing.JLabel();
        unloadBUsageGlobalLabel = new javax.swing.JLabel();
        unloadAUsageGlobalLabel = new javax.swing.JLabel();
        loadBUsageGlobalLabel = new javax.swing.JLabel();
        loadAUsageGlobalLabel = new javax.swing.JLabel();
        avgDurationPerCycleGlobalLabel = new javax.swing.JLabel();
        avgLoadPerCycleGlobalLabel = new javax.swing.JLabel();
        avgRowATimeGlobalLabel = new javax.swing.JLabel();
        avgRowALengthGlobalLabel = new javax.swing.JLabel();
        avgRowBTimeGlobalLabel = new javax.swing.JLabel();
        avgRowBLengthGlobalLabel = new javax.swing.JLabel();
        carFailureGlobalLengthLabel = new javax.swing.JLabel();
        avgStorageABGlobalLength = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        successGlobalConfLabel = new javax.swing.JLabel();
        resourceOutcomeGlobalConfLabel = new javax.swing.JLabel();
        resourceBComeGlobalConfLabel = new javax.swing.JLabel();
        resourceAComeGlobalConfLabel = new javax.swing.JLabel();
        unloaderBUsageGlobalConfLabel = new javax.swing.JLabel();
        unloaderAUsageGlobalConfLabel = new javax.swing.JLabel();
        loaderBUsageGlobalConfLabel = new javax.swing.JLabel();
        loaderAUsageGlobalConfLabel = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        avgDurationOfCycleGlobalConfLabel = new javax.swing.JLabel();
        avgLoadPerCycleGlobalConfLabel = new javax.swing.JLabel();
        avgRowATimeGlobalConfLabel = new javax.swing.JLabel();
        avgRowBTimeGlobalConfLabel = new javax.swing.JLabel();
        avgRowALengthGlobalConfLabel = new javax.swing.JLabel();
        avgRowBLengthGlobalConfLabel = new javax.swing.JLabel();
        carFailugeTimeGlobalConfLabel = new javax.swing.JLabel();
        fillOfStorageABGlobalConfLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        loaderAStatus = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        loaderBStatus = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        storageA = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        unloaderAStatus = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        unloaderBStatus = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        storageB = new javax.swing.JLabel();
        graphStorageA = new javax.swing.JPanel();
        graphStorageB = new javax.swing.JPanel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Replication number");

        jLabel2.setText("Seed");

        buyUnloaderCheckBox.setText("Buy unloader");

        seedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seedTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Type 1");

        jLabel4.setText("Type 2");

        jLabel5.setText("Type 3");

        jLabel6.setText("Type 4");

        jLabel7.setText("Type 5");

        type1NumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type1NumberTextFieldActionPerformed(evt);
            }
        });

        simulateButton.setText("Simulate");
        simulateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulateButtonActionPerformed(evt);
            }
        });

        turnOffACompany.setText("Turn off A company");

        jLabel33.setText("Momental price");

        priceLabel.setText("jLabel34");

        fullVehicles.setText("Full vehicles");

        turnOffDays.setText("jLabel68");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(buyUnloaderCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fullVehicles)
                        .addGap(24, 24, 24)
                        .addComponent(turnOffACompany))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(replicationNumberTextField)
                            .addComponent(seedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(type1NumberTextField))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(type2NumberTextField))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(type3NumberTextField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(turnOffDays)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(type4NumberTextField))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(type5NumberTextField))
                        .addGap(78, 78, 78)
                        .addComponent(jLabel33)
                        .addGap(18, 18, 18)
                        .addComponent(priceLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(simulateButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(replicationNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(seedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type1NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type2NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type3NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type4NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type5NumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33)
                    .addComponent(priceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyUnloaderCheckBox)
                    .addComponent(simulateButton)
                    .addComponent(turnOffACompany)
                    .addComponent(fullVehicles)
                    .addComponent(turnOffDays))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setText("Simulation time");

        simulationTimeLabel.setText("jLabel9");

        intervalSlider.setMinimum(1);
        intervalSlider.setValue(1);

        jLabel9.setText("Interval");

        jLabel10.setText("Duration");

        durationSlider.setMaximum(1500);
        durationSlider.setMinimum(100);
        durationSlider.setValue(1000);

        intervalSetted.setText("jLabel11");

        durationSetted.setText("jLabel11");

        pauseSimulationButton.setText("Pause");
        pauseSimulationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseSimulationButtonActionPerformed(evt);
            }
        });

        stopSimulationButton.setText("Stop");
        stopSimulationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopSimulationButtonActionPerformed(evt);
            }
        });

        jLabel17.setText("Real enviroment time");

        simulationEnviromentTIme.setText("jLabel18");

        maxSpeedCheckBox.setText("Max speed");

        jLabel34.setText("Replication number");

        replicationNumberLabel.setText("jLabel50");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(simulationTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(simulationEnviromentTIme)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stopSimulationButton)
                                .addGap(18, 18, 18)
                                .addComponent(pauseSimulationButton)
                                .addContainerGap())
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(jLabel34)
                                .addGap(18, 18, 18)
                                .addComponent(replicationNumberLabel)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(intervalSetted, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(durationSetted))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maxSpeedCheckBox)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(intervalSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(durationSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(simulationTimeLabel)
                    .addComponent(jLabel17)
                    .addComponent(simulationEnviromentTIme)
                    .addComponent(jLabel34)
                    .addComponent(replicationNumberLabel))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(intervalSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(intervalSetted))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(durationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(durationSetted)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pauseSimulationButton)
                    .addComponent(stopSimulationButton)
                    .addComponent(maxSpeedCheckBox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Replication stats"));

        jLabel18.setText("Loader A usage");

        jLabel19.setText("Loader B usage");

        jLabel20.setText("Unloader A usage");

        jLabel21.setText("Unloader B usage");

        unloaderBUsageLabel.setText("jLabel22");

        unloaderAUsageLabel.setText("jLabel22");

        loaderBUsageLabel.setText("jLabel22");

        loaderAUsageLabel.setText("jLabel22");

        jLabel22.setText("Resources come A");

        jLabel23.setText("Resources come B");

        jLabel24.setText("Resources outcome");

        resorcesOutcome.setText("jLabel25");

        resorcesBComeLabel.setText("jLabel26");

        resorcesAComeLabel.setText("jLabel27");

        jLabel25.setText("Success of take out");

        takeOutSuccessLabel.setText("jLabel26");

        jLabel26.setText("Car failure time");

        carFailureTime.setText("jLabel27");

        jLabel27.setText("Avg load per cycle");

        avgLoadPerCycleLabel.setText("jLabel28");

        jLabel28.setText("Avg duration of cycle");

        avgDurationOfCycleLabel.setText("jLabel29");

        jLabel29.setText("Row A avg time");

        jLabel30.setText("Row B avg time");

        rowAAvgTime.setText("jLabel31");

        rowBAvgTime.setText("jLabel31");

        jLabel31.setText("Row A avg length");

        jLabel32.setText("Row B avg length");

        rowAAvgLengthLabel.setText("jLabel33");

        rowBAvgLengthLabel.setText("jLabel34");

        jLabel50.setText("Avg A/B storage");

        avgABStorageLabel.setText("jLabel51");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loaderBUsageLabel)
                            .addComponent(unloaderAUsageLabel)
                            .addComponent(loaderAUsageLabel)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unloaderBUsageLabel)
                            .addComponent(resorcesAComeLabel)
                            .addComponent(resorcesOutcome)
                            .addComponent(resorcesBComeLabel)
                            .addComponent(takeOutSuccessLabel)))
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(jLabel29)
                            .addComponent(jLabel32)
                            .addComponent(jLabel26)
                            .addComponent(jLabel50))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rowBAvgTime)
                            .addComponent(rowAAvgTime)
                            .addComponent(rowAAvgLengthLabel)
                            .addComponent(rowBAvgLengthLabel)
                            .addComponent(carFailureTime)
                            .addComponent(avgABStorageLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel27))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(avgLoadPerCycleLabel)
                            .addComponent(avgDurationOfCycleLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(loaderAUsageLabel)
                    .addComponent(jLabel27)
                    .addComponent(avgLoadPerCycleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(loaderBUsageLabel)
                    .addComponent(jLabel28)
                    .addComponent(avgDurationOfCycleLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(unloaderAUsageLabel)
                    .addComponent(jLabel29)
                    .addComponent(rowAAvgTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(unloaderBUsageLabel)
                    .addComponent(jLabel30)
                    .addComponent(rowBAvgTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(resorcesAComeLabel)
                    .addComponent(jLabel31)
                    .addComponent(rowAAvgLengthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(resorcesBComeLabel)
                    .addComponent(jLabel32)
                    .addComponent(rowBAvgLengthLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(resorcesOutcome)
                    .addComponent(jLabel26)
                    .addComponent(carFailureTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(takeOutSuccessLabel)
                    .addComponent(jLabel25)
                    .addComponent(jLabel50)
                    .addComponent(avgABStorageLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Simulation stats"));

        jLabel42.setText("Loader A usage");

        jLabel52.setText("Loader B usage");

        jLabel54.setText("Unloader A usage");

        jLabel55.setText("Unloader B usage");

        jLabel56.setText("Resources come A");

        jLabel57.setText("Resources come B");

        jLabel58.setText("Resources outcome");

        jLabel59.setText("Success of take out");

        jLabel60.setText("Avg load per cycle");

        jLabel61.setText("Avg duration of cycle");

        jLabel62.setText("Row A avg time");

        jLabel63.setText("Row B avg time");

        jLabel64.setText("Row A avg length");

        jLabel65.setText("Row B avg length");

        jLabel66.setText("Car failure time");

        jLabel67.setText("Avg A/B storage");

        resourceOutcomeGlobalLabel.setText("jLabel68");

        successGlobalLabel.setText("jLabel69");

        resourceBComeGlobalLabel.setText("jLabel70");

        resourceAComeGlobalLabel.setText("jLabel71");

        unloadBUsageGlobalLabel.setText("jLabel72");

        unloadAUsageGlobalLabel.setText("jLabel73");

        loadBUsageGlobalLabel.setText("jLabel74");

        loadAUsageGlobalLabel.setText("jLabel75");

        avgDurationPerCycleGlobalLabel.setText("jLabel76");

        avgLoadPerCycleGlobalLabel.setText("jLabel77");

        avgRowATimeGlobalLabel.setText("jLabel78");

        avgRowALengthGlobalLabel.setText("jLabel79");

        avgRowBTimeGlobalLabel.setText("jLabel80");

        avgRowBLengthGlobalLabel.setText("jLabel81");

        carFailureGlobalLengthLabel.setText("jLabel82");

        avgStorageABGlobalLength.setText("jLabel83");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel58)
                    .addComponent(jLabel57)
                    .addComponent(jLabel56)
                    .addComponent(jLabel55)
                    .addComponent(jLabel54)
                    .addComponent(jLabel52)
                    .addComponent(jLabel42)
                    .addComponent(jLabel59))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadAUsageGlobalLabel)
                    .addComponent(loadBUsageGlobalLabel)
                    .addComponent(unloadAUsageGlobalLabel)
                    .addComponent(unloadBUsageGlobalLabel)
                    .addComponent(resourceAComeGlobalLabel)
                    .addComponent(resourceBComeGlobalLabel)
                    .addComponent(resourceOutcomeGlobalLabel)
                    .addComponent(successGlobalLabel))
                .addGap(0, 89, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addGap(41, 41, 41)
                        .addComponent(avgStorageABGlobalLength))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addGap(32, 32, 32)
                        .addComponent(avgLoadPerCycleGlobalLabel))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel61)
                            .addComponent(jLabel62)
                            .addComponent(jLabel63)
                            .addComponent(jLabel64)
                            .addComponent(jLabel65)
                            .addComponent(jLabel66))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carFailureGlobalLengthLabel)
                            .addComponent(avgRowBLengthGlobalLabel)
                            .addComponent(avgRowALengthGlobalLabel)
                            .addComponent(avgRowBTimeGlobalLabel)
                            .addComponent(avgRowATimeGlobalLabel)
                            .addComponent(avgDurationPerCycleGlobalLabel))))
                .addContainerGap(246, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel60)
                    .addComponent(loadAUsageGlobalLabel)
                    .addComponent(avgLoadPerCycleGlobalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(jLabel61)
                    .addComponent(loadBUsageGlobalLabel)
                    .addComponent(avgDurationPerCycleGlobalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(unloadAUsageGlobalLabel)
                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(avgRowATimeGlobalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel55)
                        .addComponent(unloadBUsageGlobalLabel))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel63)
                        .addComponent(avgRowBTimeGlobalLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel56)
                        .addComponent(resourceAComeGlobalLabel))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel64)
                        .addComponent(avgRowALengthGlobalLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel57)
                        .addComponent(resourceBComeGlobalLabel))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel65)
                        .addComponent(avgRowBLengthGlobalLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(carFailureGlobalLengthLabel)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel58)
                        .addComponent(resourceOutcomeGlobalLabel)
                        .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(successGlobalLabel)
                    .addComponent(jLabel59)
                    .addComponent(avgStorageABGlobalLength))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Simulation stats", jPanel5);

        jLabel35.setText("Loader A usage");

        jLabel36.setText("Loader B usage");

        jLabel37.setText("Unloader A usage");

        jLabel38.setText("Unloader B usage");

        jLabel39.setText("Resources come A");

        jLabel40.setText("Resources come B");

        jLabel41.setText("Resources outcome");

        jLabel43.setText("Avg load per cycle");

        jLabel44.setText("Avg duration of cycle");

        jLabel45.setText("Row A avg time");

        jLabel46.setText("Row B avg time");

        jLabel47.setText("Row A avg length");

        jLabel48.setText("Row B avg length");

        jLabel49.setText("Car failure time");

        jLabel51.setText("Avg A/B storage");

        successGlobalConfLabel.setText("jLabel52");

        resourceOutcomeGlobalConfLabel.setText("jLabel53");

        resourceBComeGlobalConfLabel.setText("jLabel54");

        resourceAComeGlobalConfLabel.setText("jLabel55");

        unloaderBUsageGlobalConfLabel.setText("jLabel56");

        unloaderAUsageGlobalConfLabel.setText("jLabel57");

        loaderBUsageGlobalConfLabel.setText("jLabel58");

        loaderAUsageGlobalConfLabel.setText("jLabel59");

        jLabel53.setText("Success of take out");

        avgDurationOfCycleGlobalConfLabel.setText("jLabel42");

        avgLoadPerCycleGlobalConfLabel.setText("jLabel52");

        avgRowATimeGlobalConfLabel.setText("jLabel54");

        avgRowBTimeGlobalConfLabel.setText("jLabel55");

        avgRowALengthGlobalConfLabel.setText("jLabel56");

        avgRowBLengthGlobalConfLabel.setText("jLabel57");

        carFailugeTimeGlobalConfLabel.setText("jLabel58");

        fillOfStorageABGlobalConfLabel.setText("jLabel59");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addGap(18, 18, 18)
                        .addComponent(successGlobalConfLabel))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel40)
                            .addComponent(jLabel39)
                            .addComponent(jLabel38)
                            .addComponent(jLabel37)
                            .addComponent(jLabel36)
                            .addComponent(jLabel35))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loaderAUsageGlobalConfLabel)
                            .addComponent(loaderBUsageGlobalConfLabel)
                            .addComponent(unloaderAUsageGlobalConfLabel)
                            .addComponent(unloaderBUsageGlobalConfLabel)
                            .addComponent(resourceAComeGlobalConfLabel)
                            .addComponent(resourceBComeGlobalConfLabel)
                            .addComponent(resourceOutcomeGlobalConfLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(jLabel45)
                            .addComponent(jLabel46)
                            .addComponent(jLabel47)
                            .addComponent(jLabel48)
                            .addComponent(jLabel49)
                            .addComponent(jLabel51))
                        .addGap(26, 26, 26)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(avgLoadPerCycleGlobalConfLabel)
                    .addComponent(avgDurationOfCycleGlobalConfLabel)
                    .addComponent(avgRowATimeGlobalConfLabel)
                    .addComponent(avgRowBTimeGlobalConfLabel)
                    .addComponent(avgRowALengthGlobalConfLabel)
                    .addComponent(avgRowBLengthGlobalConfLabel)
                    .addComponent(carFailugeTimeGlobalConfLabel)
                    .addComponent(fillOfStorageABGlobalConfLabel))
                .addGap(212, 212, 212))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel43)
                    .addComponent(loaderAUsageGlobalConfLabel)
                    .addComponent(avgLoadPerCycleGlobalConfLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel44)
                    .addComponent(loaderBUsageGlobalConfLabel)
                    .addComponent(avgDurationOfCycleGlobalConfLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(unloaderAUsageGlobalConfLabel)
                        .addComponent(avgRowATimeGlobalConfLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel46)
                    .addComponent(unloaderBUsageGlobalConfLabel)
                    .addComponent(avgRowBTimeGlobalConfLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel47)
                    .addComponent(resourceAComeGlobalConfLabel)
                    .addComponent(avgRowALengthGlobalConfLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(jLabel48)
                    .addComponent(resourceBComeGlobalConfLabel)
                    .addComponent(avgRowBLengthGlobalConfLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel41)
                        .addComponent(resourceOutcomeGlobalConfLabel)
                        .addComponent(carFailugeTimeGlobalConfLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(successGlobalConfLabel)
                    .addComponent(jLabel53)
                    .addComponent(fillOfStorageABGlobalConfLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("90% convidence stats", jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Graphs"));

        carTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Car name", "Car speed", "Filled/Capacity", "Possition"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carTable);

        jLabel11.setText("Loader A status");

        loaderAStatus.setText("jLabel17");

        jLabel12.setText("Loader B status");

        loaderBStatus.setText("jLabel17");

        jLabel13.setText("Storage A");

        storageA.setText("jLabel17");

        jLabel14.setText("Unloader A");

        unloaderAStatus.setText("jLabel17");

        jLabel15.setText("Unloader B");

        unloaderBStatus.setText("jLabel18");

        jLabel16.setText("Storage B");

        storageB.setText("jLabel18");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(loaderAStatus)
                        .addGap(104, 104, 104)
                        .addComponent(jLabel14))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loaderBStatus)
                            .addComponent(storageA))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unloaderBStatus)
                    .addComponent(unloaderAStatus)
                    .addComponent(storageB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(loaderAStatus)
                    .addComponent(jLabel14)
                    .addComponent(unloaderAStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(loaderBStatus)
                    .addComponent(jLabel15)
                    .addComponent(unloaderBStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(storageA)
                    .addComponent(jLabel16)
                    .addComponent(storageB))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Machines and storages stats", jPanel8);

        javax.swing.GroupLayout graphStorageALayout = new javax.swing.GroupLayout(graphStorageA);
        graphStorageA.setLayout(graphStorageALayout);
        graphStorageALayout.setHorizontalGroup(
            graphStorageALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );
        graphStorageALayout.setVerticalGroup(
            graphStorageALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Storage A", graphStorageA);

        javax.swing.GroupLayout graphStorageBLayout = new javax.swing.GroupLayout(graphStorageB);
        graphStorageB.setLayout(graphStorageBLayout);
        graphStorageBLayout.setHorizontalGroup(
            graphStorageBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );
        graphStorageBLayout.setVerticalGroup(
            graphStorageBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Storage B", graphStorageB);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1)
                        .addContainerGap())
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seedTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seedTextFieldActionPerformed

    private void simulateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulateButtonActionPerformed
        if (checkTextBox(replicationNumberTextField) && checkTypes()) {
            if (checkTextBox(seedTextField)) {
                simulation.setSimulation(getCarNumbers(), buyUnloaderCheckBox.isSelected(), fullVehicles.isSelected(), convertToInt(seedTextField));
            } else {
                simulation.setSimulation(getCarNumbers(), buyUnloaderCheckBox.isSelected(), fullVehicles.isSelected(), rand.nextLong());
            }
            simulation.setReplications(convertToInt(replicationNumberTextField));
            simulation.setBuyAndCompanyTurnOff(buyUnloaderCheckBox.isSelected(), turnOffACompany.isSelected(), fullVehicles.isSelected());

            new Thread(simulation).start();
            /*simulation.setMaxSpeed();
             simulation.simulate(convertToInt(replicationNumberTextField), SimulationConstants.TIME_DISTANCE_OF_BUILDING);*/

            if (maxSpeedCheckBox.isSelected()) {
                simulation.setMaxSpeed();
            }

            simulation.addGUI(this);

            simulationStarted();
        }
    }//GEN-LAST:event_simulateButtonActionPerformed

    private void type1NumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type1NumberTextFieldActionPerformed

    }//GEN-LAST:event_type1NumberTextFieldActionPerformed

    private void stopSimulationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopSimulationButtonActionPerformed
        simulation.stopSimulation();
        simulationNoStarted();
    }//GEN-LAST:event_stopSimulationButtonActionPerformed

    private void pauseSimulationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseSimulationButtonActionPerformed
        if (pauseSimulationButton.getText().compareTo("Pause") == 0) {
            simulation.pauseSimulation();
            pauseSimulationButton.setText("Resume");
        } else {
            simulation.resumeSimulation();
            pauseSimulationButton.setText("Pause");
        }
    }//GEN-LAST:event_pauseSimulationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    private boolean checkTextBox(JTextField paField) {
        try {
            if (Integer.parseInt(paField.getText()) < 0) {
                return false;
            }
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    private int convertToInt(JTextField paField) {
        return Integer.parseInt(paField.getText());
    }

    private boolean checkTypes() {
        for (JTextField textField : textFields) {
            if (checkTextBox(textField)) {
                return true;
            }
        }
        return false;
    }

    private ArrayList<Integer> getCarNumbers() {
        ArrayList<Integer> carNumber = new ArrayList<Integer>();
        int temp = -1;
        int tempMaxNum = 0;

        for (int i = 0; i < textFields.size(); i++) {
            if (checkTextBox(textFields.get(i))) {
                tempMaxNum = simulation.maxNumberOfCars(i);
                temp = convertToInt(textFields.get(i));
                if (tempMaxNum < temp && tempMaxNum != -1) {
                    carNumber.add(tempMaxNum);
                } else {
                    carNumber.add(temp);
                }
            } else {
                carNumber.add(0);
            }
        }

        return carNumber;
    }

    private void getTotalPrice() {
        priceLabel.setText(simulation.getPriceOfSet(getCarNumbers(), buyUnloaderCheckBox.isSelected()) + " â‚¬");
    }

    private XYDataset fillDataset(ArrayList<Double> data, int jump, double koef) {
        if (jump == 0) {
            jump = 1;
        }
        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries grafPriemer = new XYSeries("Avg value");
        for (int i = (int) (data.size() * koef); i < data.size(); i += jump) {
            grafPriemer.add(timeContainer.get(i).doubleValue(), data.get(i));
        }
        dataset.addSeries(grafPriemer);
        return dataset;
    }

    private ChartPanel createGraph(XYDataset dataset, int odstupy, String menoGrafu, String xAxisMeno, String yAxisMeno) {
        if(odstupy == 0){
            odstupy = 1;
        }
        JFreeChart graf = ChartFactory.createXYLineChart(menoGrafu, xAxisMeno, yAxisMeno, dataset);
        XYPlot plot = graf.getXYPlot();
        NumberAxis yAxis = (NumberAxis) plot.getRangeAxis();
        yAxis.setAutoRangeIncludesZero(false);
        NumberAxis xAxis = (NumberAxis) plot.getDomainAxis();
        xAxis.setTickUnit(new NumberTickUnit(odstupy));
        return new ChartPanel(graf);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avgABStorageLabel;
    private javax.swing.JLabel avgDurationOfCycleGlobalConfLabel;
    private javax.swing.JLabel avgDurationOfCycleLabel;
    private javax.swing.JLabel avgDurationPerCycleGlobalLabel;
    private javax.swing.JLabel avgLoadPerCycleGlobalConfLabel;
    private javax.swing.JLabel avgLoadPerCycleGlobalLabel;
    private javax.swing.JLabel avgLoadPerCycleLabel;
    private javax.swing.JLabel avgRowALengthGlobalConfLabel;
    private javax.swing.JLabel avgRowALengthGlobalLabel;
    private javax.swing.JLabel avgRowATimeGlobalConfLabel;
    private javax.swing.JLabel avgRowATimeGlobalLabel;
    private javax.swing.JLabel avgRowBLengthGlobalConfLabel;
    private javax.swing.JLabel avgRowBLengthGlobalLabel;
    private javax.swing.JLabel avgRowBTimeGlobalConfLabel;
    private javax.swing.JLabel avgRowBTimeGlobalLabel;
    private javax.swing.JLabel avgStorageABGlobalLength;
    private javax.swing.JCheckBox buyUnloaderCheckBox;
    private javax.swing.JLabel carFailugeTimeGlobalConfLabel;
    private javax.swing.JLabel carFailureGlobalLengthLabel;
    private javax.swing.JLabel carFailureTime;
    private javax.swing.JTable carTable;
    private javax.swing.JLabel durationSetted;
    private javax.swing.JSlider durationSlider;
    private javax.swing.JLabel fillOfStorageABGlobalConfLabel;
    private javax.swing.JCheckBox fullVehicles;
    private javax.swing.JPanel graphStorageA;
    private javax.swing.JPanel graphStorageB;
    private javax.swing.JLabel intervalSetted;
    private javax.swing.JSlider intervalSlider;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel loadAUsageGlobalLabel;
    private javax.swing.JLabel loadBUsageGlobalLabel;
    private javax.swing.JLabel loaderAStatus;
    private javax.swing.JLabel loaderAUsageGlobalConfLabel;
    private javax.swing.JLabel loaderAUsageLabel;
    private javax.swing.JLabel loaderBStatus;
    private javax.swing.JLabel loaderBUsageGlobalConfLabel;
    private javax.swing.JLabel loaderBUsageLabel;
    private javax.swing.JCheckBox maxSpeedCheckBox;
    private javax.swing.JButton pauseSimulationButton;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel replicationNumberLabel;
    private javax.swing.JTextField replicationNumberTextField;
    private javax.swing.JLabel resorcesAComeLabel;
    private javax.swing.JLabel resorcesBComeLabel;
    private javax.swing.JLabel resorcesOutcome;
    private javax.swing.JLabel resourceAComeGlobalConfLabel;
    private javax.swing.JLabel resourceAComeGlobalLabel;
    private javax.swing.JLabel resourceBComeGlobalConfLabel;
    private javax.swing.JLabel resourceBComeGlobalLabel;
    private javax.swing.JLabel resourceOutcomeGlobalConfLabel;
    private javax.swing.JLabel resourceOutcomeGlobalLabel;
    private javax.swing.JLabel rowAAvgLengthLabel;
    private javax.swing.JLabel rowAAvgTime;
    private javax.swing.JLabel rowBAvgLengthLabel;
    private javax.swing.JLabel rowBAvgTime;
    private javax.swing.JTextField seedTextField;
    private javax.swing.JButton simulateButton;
    private javax.swing.JLabel simulationEnviromentTIme;
    private javax.swing.JLabel simulationTimeLabel;
    private javax.swing.JButton stopSimulationButton;
    private javax.swing.JLabel storageA;
    private javax.swing.JLabel storageB;
    private javax.swing.JLabel successGlobalConfLabel;
    private javax.swing.JLabel successGlobalLabel;
    private javax.swing.JLabel takeOutSuccessLabel;
    private javax.swing.JCheckBox turnOffACompany;
    private javax.swing.JLabel turnOffDays;
    private javax.swing.JTextField type1NumberTextField;
    private javax.swing.JTextField type2NumberTextField;
    private javax.swing.JTextField type3NumberTextField;
    private javax.swing.JTextField type4NumberTextField;
    private javax.swing.JTextField type5NumberTextField;
    private javax.swing.JLabel unloadAUsageGlobalLabel;
    private javax.swing.JLabel unloadBUsageGlobalLabel;
    private javax.swing.JLabel unloaderAStatus;
    private javax.swing.JLabel unloaderAUsageGlobalConfLabel;
    private javax.swing.JLabel unloaderAUsageLabel;
    private javax.swing.JLabel unloaderBStatus;
    private javax.swing.JLabel unloaderBUsageGlobalConfLabel;
    private javax.swing.JLabel unloaderBUsageLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setCurrentTime(double simTime) {
        simulationTimeLabel.setText(String.format("%.5f", simTime));
        int days = (int) Math.floor((simTime + SimulationConstants.START_TIME) / (24 * 60));
        int hours = (int) Math.floor(((simTime + SimulationConstants.START_TIME) % (24 * 60)) / 60);
        int minutes = (int) Math.floor(((simTime + SimulationConstants.START_TIME) % 60));
        simulationEnviromentTIme.setText(days + " days, " + String.format("%02d", hours) + ":" + String.format("%02d", minutes));
    }

    @Override
    public void setMachineInformation(String machineName, String machineState) {
        switch (machineName) {
            case "loaderA":
                loaderAStatus.setText(machineState);
                break;
            case "loaderB":
                loaderBStatus.setText(machineState);
                break;
            case "unloaderA":
                unloaderAStatus.setText(machineState);
                break;
            case "unloaderB":
                unloaderBStatus.setText(machineState);
                break;
        }
    }

    @Override
    public void setStateOfAStorage(String storageAmount) {
        storageA.setText(storageAmount);
    }

    @Override
    public void setStateOfBStorage(String storageAmount) {
        storageB.setText(storageAmount);
    }

    @Override
    public synchronized void setCarInformation(ArrayList<StructCarInformation> carInformation, double simTime) {
        setTable(carInformation, simTime);
    }

    private synchronized void setTable(ArrayList<StructCarInformation> carInformation, double simTime) {
        Object[] temp = new Object[5];
        DefaultTableModel model = new DefaultTableModel();
        double timeOfAction = 0;

        model.addColumn("Car name");
        model.addColumn("Speed");
        model.addColumn("Filled/Capacity");
        model.addColumn("Possition");
        model.addColumn("Time of action");

        for (StructCarInformation car : carInformation) {
            timeOfAction = car.getTimeOfAction() - simTime;
            
            temp[0] = car.getName();
            temp[1] = car.getSpeed();
            temp[3] = car.getPossition();
            switch (car.getPossition()) {
                case "Nakladka A":
                    temp[2] = String.format("%.1f", (car.getMomentalFilled() - (timeOfAction * SimulationConstants.LOAD_MACHINE1_SPEED))) + "/" + car.getCapacity();
                    break;
                case "Nakladka B":
                    temp[2] = String.format("%.1f", (car.getMomentalFilled() - (timeOfAction * SimulationConstants.LOAD_MACHINE2_SPEED))) + "/" + car.getMomentalFilled() + "/" + car.getCapacity();
                    break;
                case "Vykladka A":
                    temp[2] = String.format("%.1f",timeOfAction * SimulationConstants.UNLOAD_MACHINE1_SPEED) + "/" + car.getMomentalFilled() + "/" + car.getCapacity();
                    break;
                case "Vykladka B":
                    temp[2] = String.format("%.1f",timeOfAction * SimulationConstants.UNLOAD_MACHINE2_SPEED) + "/" + car.getMomentalFilled() + "/" + car.getCapacity();
                    break;
                default:
                    temp[2] = car.getMomentalFilled() + "/" + car.getCapacity();
            }
            if (timeOfAction >= 0) {
                temp[4] = String.format("%.2f", timeOfAction);
            } else {
                temp[4] = "-";
            }

            model.addRow(temp);
        }
        SwingUtilities.invokeLater(() -> {
            carTable.setModel(model);
        });
        //carTable.setModel(model);
    }

    private void simulationStarted() {
        replicationNumberTextField.setEnabled(false);
        seedTextField.setEnabled(false);
        buyUnloaderCheckBox.setEnabled(false);
        turnOffACompany.setEnabled(false);
        simulateButton.setEnabled(false);
        fullVehicles.setEnabled(false);
        resetLabels();

        for (JTextField textField : textFields) {
            textField.setEnabled(false);
        }

        stopSimulationButton.setEnabled(true);
        pauseSimulationButton.setEnabled(true);
        maxSpeedCheckBox.setEnabled(true);
    }

    private void simulationNoStarted() {
        replicationNumberTextField.setEnabled(true);
        seedTextField.setEnabled(true);
        buyUnloaderCheckBox.setEnabled(true);
        turnOffACompany.setEnabled(true);
        simulateButton.setEnabled(true);
        fullVehicles.setEnabled(true);

        for (JTextField textField : textFields) {
            textField.setEnabled(true);
        }

        stopSimulationButton.setEnabled(false);
        pauseSimulationButton.setEnabled(false);
        maxSpeedCheckBox.setEnabled(false);
    }

    private void resetLabels() {
        simulationTimeLabel.setText("");
        simulationEnviromentTIme.setText("");

        storageA.setText("");
        storageB.setText("");

        loaderAStatus.setText("");
        loaderBStatus.setText("");

        unloaderAStatus.setText("");
        unloaderBStatus.setText("");

        loaderAUsageLabel.setText("");
        loaderBUsageLabel.setText("");

        unloaderAUsageLabel.setText("");
        unloaderBUsageLabel.setText("");

        resorcesAComeLabel.setText("");
        resorcesBComeLabel.setText("");
        resorcesOutcome.setText("");

        takeOutSuccessLabel.setText("");
        carFailureTime.setText("");

        avgDurationOfCycleLabel.setText("");
        avgLoadPerCycleLabel.setText("");

        rowAAvgTime.setText("");
        rowBAvgTime.setText("");

        rowAAvgLengthLabel.setText("");
        rowBAvgLengthLabel.setText("");

        replicationNumberLabel.setText("");

        avgABStorageLabel.setText("");

        loaderAUsageGlobalConfLabel.setText("");
        loaderBUsageGlobalConfLabel.setText("");
        unloaderAUsageGlobalConfLabel.setText("");
        unloaderBUsageGlobalConfLabel.setText("");

        resourceAComeGlobalConfLabel.setText("");
        resourceBComeGlobalConfLabel.setText("");
        resourceOutcomeGlobalConfLabel.setText("");

        successGlobalConfLabel.setText("");

        avgDurationOfCycleGlobalConfLabel.setText("");
        avgLoadPerCycleGlobalConfLabel.setText("");
        avgRowALengthGlobalConfLabel.setText("");
        avgRowBLengthGlobalConfLabel.setText("");
        avgRowATimeGlobalConfLabel.setText("");
        avgRowBTimeGlobalConfLabel.setText("");

        carFailugeTimeGlobalConfLabel.setText("");
        fillOfStorageABGlobalConfLabel.setText("");

        avgStorageABGlobalLength.setText("");
        avgDurationPerCycleGlobalLabel.setText("");
        avgLoadPerCycleGlobalLabel.setText("");
        avgRowALengthGlobalLabel.setText("");
        avgRowATimeGlobalLabel.setText("");
        avgRowBLengthGlobalLabel.setText("");
        avgRowBTimeGlobalLabel.setText("");
        carFailureGlobalLengthLabel.setText("");
        loadAUsageGlobalLabel.setText("");
        loadBUsageGlobalLabel.setText("");
        unloadAUsageGlobalLabel.setText("");
        unloadBUsageGlobalLabel.setText("");
        resourceAComeGlobalLabel.setText("");
        resourceBComeGlobalLabel.setText("");
        resourceOutcomeGlobalLabel.setText("");
        successGlobalLabel.setText("");

        turnOffDays.setText("");
    }

    @Override
    public void setLoaderAUsage(double usage) {
        loaderAUsageLabel.setText(String.format("%.3f", usage));
    }

    @Override
    public void setLoaderBUsage(double usage) {
        loaderBUsageLabel.setText(String.format("%.3f", usage));
    }

    @Override
    public void setUnloaderAUsage(double usage) {
        unloaderAUsageLabel.setText(String.format("%.3f", usage));
    }

    @Override
    public void setUnloaderBUsage(double usage) {
        unloaderBUsageLabel.setText(String.format("%.3f", usage));
    }

    @Override
    public void setResourcesToA(long resources) {
        resorcesAComeLabel.setText(resources + "");
    }

    @Override
    public void setResourcesToB(long resources) {
        resorcesBComeLabel.setText(resources + "");
    }

    @Override
    public void setResourcesOutcome(long resources) {
        resorcesOutcome.setText(resources + "");
    }

    @Override
    public void setSuccess(double success) {
        takeOutSuccessLabel.setText(String.format("%.3f", success));
    }

    @Override
    public void setCarFailureTime(double failureTime) {
        carFailureTime.setText(String.format("%.0f", failureTime));
    }

    @Override
    public void setAvgLoadPerCycle(double load) {
        avgLoadPerCycleLabel.setText(String.format("%.3f", load));
    }

    @Override
    public void setAvgDurationPerCycle(double duration) {
        avgDurationOfCycleLabel.setText(String.format("%.3f", duration));
    }

    @Override
    public void setAvgTimeRowA(double duration) {
        rowAAvgTime.setText(String.format("%.3f", duration));
    }

    @Override
    public void setAvgTimeRowB(double duration) {
        rowBAvgTime.setText(String.format("%.3f", duration));
    }

    @Override
    public void setAvgLengthRowA(double duration) {
        rowAAvgLengthLabel.setText(String.format("%.3f", duration));
    }

    @Override
    public void setAvgLengthRowB(double duration) {
        rowBAvgLengthLabel.setText(String.format("%.3f", duration));
    }

    @Override
    public void setAvgABStorage(double storageA, double storageB) {
        avgABStorageLabel.setText(String.format("%.1f/%.1f", storageA, storageB));

        graphStorageA.setLayout(new java.awt.BorderLayout());
        graphStorageA.removeAll();
        graphStorageA.add(createGraph(fillDataset(storageAAvgContainer, timeContainer.size() / 1000, 0.2),
                (int)(timeContainer.get(timeContainer.size()-1) / 10), "Graph avg amount in storage A", "Sim time", "Avg amount in storage"), BorderLayout.CENTER);
        graphStorageA.validate();
        graphStorageA.repaint();

        graphStorageB.setLayout(new java.awt.BorderLayout());
        graphStorageB.removeAll();
        graphStorageB.add(createGraph(fillDataset(storageBAvgContainer, timeContainer.size() / 1000, 0.2),
                (int)(timeContainer.get(timeContainer.size()-1) / 10), "Graph avg amount in storage B", "Sim time", "Avg amount in storage"), BorderLayout.CENTER);
        graphStorageB.validate();
        graphStorageB.repaint();
    }

    @Override
    public void setReplicationNumber(int replicationNumber) {
        replicationNumberLabel.setText(replicationNumber + "");
        storageAAvgContainer = new ArrayList<>();
        storageBAvgContainer = new ArrayList<>();
        timeContainer = new ArrayList<>();
    }

    @Override
    public void setLoaderAUsageGlobal(double[] usage, double normalUsage) {
        loaderAUsageGlobalConfLabel.setText((String.format("<%.3f, %.3f>", usage[0], usage[1])));
        loadAUsageGlobalLabel.setText(String.format("%.3f", normalUsage));
    }

    @Override
    public void setLoaderBUsageGlobal(double[] usage, double normalUsage) {
        loaderBUsageGlobalConfLabel.setText((String.format("<%.3f, %.3f>", usage[0], usage[1])));
        loadBUsageGlobalLabel.setText(String.format("%.3f", normalUsage));
    }

    @Override
    public void setUnloaderAUsageGlobal(double[] usage, double normalUsage) {
        unloaderAUsageGlobalConfLabel.setText((String.format("<%.3f, %.3f>", usage[0], usage[1])));
        unloadAUsageGlobalLabel.setText(String.format("%.3f", normalUsage));
    }

    @Override
    public void setUnloaderBUsageGlobal(double[] usage, double normalUsage) {
        unloaderBUsageGlobalConfLabel.setText((String.format("<%.3f, %.3f>", usage[0], usage[1])));
        unloadBUsageGlobalLabel.setText(String.format("%.3f", normalUsage));
    }

    @Override
    public void setResourcesToAGlobal(double[] resources, double normalResources) {
        resourceAComeGlobalConfLabel.setText((String.format("<%.3f, %.3f>", resources[0], resources[1])));
        resourceAComeGlobalLabel.setText(String.format("%.3f", normalResources));
    }

    @Override
    public void setResourcesToBGlobal(double[] resources, double normalResources) {
        resourceBComeGlobalConfLabel.setText((String.format("<%.3f, %.3f>", resources[0], resources[1])));
        resourceBComeGlobalLabel.setText(String.format("%.3f", normalResources));
    }

    @Override
    public void setResourcesOutcomeGlobal(double[] resources, double normalResources) {
        resourceOutcomeGlobalConfLabel.setText((String.format("<%.3f, %.3f>", resources[0], resources[1])));
        resourceOutcomeGlobalLabel.setText(String.format("%.3f", normalResources));
    }

    @Override
    public void setSuccessGlobal(double[] success, double normalSuccess) {
        successGlobalConfLabel.setText((String.format("<%.3f, %.3f>", success[0], success[1])));
        successGlobalLabel.setText(String.format("%.3f", normalSuccess));
    }

    @Override
    public void setCarFailureTimeGlobal(double[] failureTime, double normalFailureTime) {
        carFailugeTimeGlobalConfLabel.setText((String.format("<%.3f, %.3f>", failureTime[0], failureTime[1])));
        carFailureGlobalLengthLabel.setText(String.format("%.3f", normalFailureTime));
    }

    @Override
    public void setAvgLoadPerCycleGlobal(double[] load, double normalLoad) {
        avgLoadPerCycleGlobalConfLabel.setText((String.format("<%.3f, %.3f>", load[0], load[1])));
        avgLoadPerCycleGlobalLabel.setText(String.format("%.3f", normalLoad));
    }

    @Override
    public void setAvgDurationPerCycleGlobal(double[] duration, double normalDuration) {
        avgDurationOfCycleGlobalConfLabel.setText((String.format("<%.3f, %.3f>", duration[0], duration[1])));
        avgDurationPerCycleGlobalLabel.setText(String.format("%.3f", normalDuration));
    }

    @Override
    public void setAvgTimeRowAGlobal(double[] duration, double normalDuration) {
        avgRowATimeGlobalConfLabel.setText((String.format("<%.3f, %.3f>", duration[0], duration[1])));
        avgRowATimeGlobalLabel.setText(String.format("%.3f", normalDuration));
    }

    @Override
    public void setAvgTimeRowBGlobal(double[] duration, double normalDuration) {
        avgRowBTimeGlobalConfLabel.setText((String.format("<%.3f, %.3f>", duration[0], duration[1])));
        avgRowBTimeGlobalLabel.setText(String.format("%.3f", normalDuration));
    }

    @Override
    public void setAvgLengthRowAGlobal(double[] duration, double normalDuration) {
        avgRowALengthGlobalConfLabel.setText((String.format("<%.3f, %.3f>", duration[0], duration[1])));
        avgRowALengthGlobalLabel.setText(String.format("%.3f", normalDuration));
    }

    @Override
    public void setAvgLengthRowBGlobal(double[] duration, double normalDuration) {
        avgRowBLengthGlobalConfLabel.setText((String.format("<%.3f, %.3f>", duration[0], duration[1])));
        avgRowBLengthGlobalLabel.setText(String.format("%.3f", normalDuration));
    }

    @Override
    public void setAvgABStorageGlobal(double[] storageA, double[] storageB, double normalDurationA, double normalDurationB) {
        fillOfStorageABGlobalConfLabel.setText((String.format("<%.3f, %.3f> , <%.3f, %.3f>",
                storageA[0], storageA[1], storageB[0], storageB[1])));
        avgStorageABGlobalLength.setText(String.format("%.3f/ %.3f", normalDurationA, normalDurationB));
    }

    @Override
    public void endOfSimulation() {
        simulationNoStarted();
    }

    @Override
    public void setTurnOffTime(double turnOffTime) {
        turnOffDays.setText((turnOffTime / (24 * 60)) + " days");
    }

    @Override
    public void setGraphInformation(double storageA, double storageB, double time) {
        if (storageAAvgContainer == null) {
            storageAAvgContainer = new ArrayList<>();
            storageBAvgContainer = new ArrayList<>();
            timeContainer = new ArrayList<>();
        }
        storageAAvgContainer.add(storageA);
        storageBAvgContainer.add(storageB);
        timeContainer.add(time);
    }
}
